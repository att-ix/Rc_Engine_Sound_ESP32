# Read in a number of sample header files as created
# by the Audio2Header.html tool and converts them
# into one big JavaScript file.
#
# This file can be used by the simulation to play the sounds.
# It contains the two variables "allSamples" and "filenameSamplesMap"

import re
import sys
import pathlib
import json
import base64

# Contains all sound samples.
#
# Sorted like this:
# {'sound1':
#   {'007JamesBond': [-1, -2, ...],
#   }
# }
allSamples = {}

# contains a mapping of filenames vs sound type.
# e.g. '0_sample.h': 'idle'
filenameMap = {}

def readInputFile(filename):
    """ Reads the input file and adds the samples to the
        allSamples variable.
    """
    print("Reading " + filename, file=sys.stderr)

    sampleName = pathlib.Path(filename).stem
    sampleType = "idle"
    samples = bytes()
    with open(filename, 'r') as file1:
        lines = file1.readlines()
        for line in lines:
            # cut away comments
            line = re.sub("//.*$", "", line)

            # any word character means it's not a sample line:
            m = re.search("([a-zA-Z]+)", line)
            if m:
                # look for the sample name
                m = re.search("(\w+)SampleCount", line)
                if m:
                    sampleType = m.group(1)
            else:
                m = re.findall('(-?\d+)', line)
                if m:
                    samples = samples + bytes(map(lambda x: int(x) + 128, m))

    # add it to samples
    if not sampleType in allSamples:
        allSamples[sampleType] = {}
    allSamples[sampleType][sampleName] = base64.b64encode(samples).decode('utf-8')

    # add to filename map
    filenameMap[pathlib.Path(filename).name] = sampleType


for filename in sys.argv[1:]:
    readInputFile(filename)


print("""/** Vehicle samples
 *
 * This file contains vehicle samples from the vehicles
 * folder.
 *
 * This file is auto generated by createSamplesJs.py.
 * Don't edit it manually.
 */

var allSamples =""")

print(json.dumps(allSamples, indent=4))

print("""
/** Map of filename vs type */
var filenameSamplesMap =""")

print(json.dumps(filenameMap, indent=4))

